.TH "include/vmath.h" 3 "Tue Nov 28 2017" "Version 1.1.4" "Vex Team 9228A" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/vmath.h \- Vex Specific Math Functions, includes: Cartesian to polar cordinates\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <math\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBcord\fP"
.br
.RI "A struct that contains cartesian coordinates\&. "
.ti -1c
.RI "struct \fBpolar_cord\fP"
.br
.RI "A struct that contains polar coordinates\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBM_PI\fP   3\&.14159265358979323846"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fBpolar_cord\fP \fBcartesian_cord_to_polar\fP (struct \fBcord\fP cords)"
.br
.RI "Function to convert x and y 2 dimensional cartesian cordinated to polar coordinates\&. "
.ti -1c
.RI "struct \fBpolar_cord\fP \fBcartesian_to_polar\fP (float x, float y)"
.br
.RI "Function to convert x and y 2 dimensional cartesian coordinated to polar coordinates\&. "
.ti -1c
.RI "int \fBmax\fP (int a, int b)"
.br
.RI "the min of two values "
.ti -1c
.RI "int \fBmin\fP (int a, int b)"
.br
.RI "the min of two values "
.ti -1c
.RI "double \fBsind\fP (double angle)"
.br
.RI "sine of a angle in degrees "
.in -1c
.SH "Detailed Description"
.PP 
Vex Specific Math Functions, includes: Cartesian to polar cordinates\&. 


.PP
\fBAuthor:\fP
.RS 4
Christian Desimone 
.PP
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/9/2017 
.RE
.PP

.PP
Definition in file \fBvmath\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define M_PI   3\&.14159265358979323846"

.PP
Definition at line 13 of file vmath\&.h\&.
.PP
Referenced by sind()\&.
.SH "Function Documentation"
.PP 
.SS "struct \fBpolar_cord\fP cartesian_cord_to_polar (struct \fBcord\fP cords)"

.PP
Function to convert x and y 2 dimensional cartesian cordinated to polar coordinates\&. 
.PP
\fBAuthor:\fP
.RS 4
Christian Desimone 
.RE
.PP
\fBDate:\fP
.RS 4
9/8/2017
.RE
.PP
\fBParameters:\fP
.RS 4
\fIcords\fP the cartesian cords 
.RE
.PP
\fBReturns:\fP
.RS 4
a struct containing the angle and magnitude\&. 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBpolar_cord\fP 
.PP
\fBcord\fP 
.RE
.PP

.PP
Definition at line 33 of file vmath\&.c\&.
.PP
References cartesian_to_polar()\&.
.PP
.nf
33                                                              {
34   return cartesian_to_polar(cords\&.x, cords\&.y);
35 }
.fi
.SS "struct \fBpolar_cord\fP cartesian_to_polar (float x, float y)"

.PP
Function to convert x and y 2 dimensional cartesian coordinated to polar coordinates\&. 
.PP
\fBAuthor:\fP
.RS 4
Christian Desimone 
.RE
.PP
\fBDate:\fP
.RS 4
9/8/2017
.RE
.PP
\fBParameters:\fP
.RS 4
\fIx\fP float value of the x cartesian coordinate\&. 
.br
\fIy\fP float value of the y cartesian coordinate\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
a struct containing the angle and magnitude\&. 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBpolar_cord\fP 
.RE
.PP

.PP
Definition at line 3 of file vmath\&.c\&.
.PP
References polar_cord::angle, and polar_cord::magnitue\&.
.PP
Referenced by cartesian_cord_to_polar()\&.
.PP
.nf
3                                                        {
4   float degree = 0;
5   double magnitude = sqrt((fabs(x) * fabs(x)) + (fabs(y) * fabs(y)));
6 
7   if(x < 0){
8     degree += 180\&.0;
9   }
10   else if(x > 0 && y < 0){
11     degree += 360\&.0;
12   }
13 
14   if(x != 0 && y != 0){
15     degree += atan((float)y / (float)x);
16   }
17   else if(x == 0 && y > 0){
18     degree = 90\&.0;
19   }
20   else if(y == 0 && x < 0){
21     degree = 180\&.0;
22   }
23   else if(x == 0 && y < 0){
24     degree = 270\&.0;
25   }
26 
27   struct polar_cord p;
28   p\&.angle = degree;
29   p\&.magnitue = magnitude;
30   return p;
31 }
.fi
.SS "int max (int a, int b)"

.PP
the min of two values 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP the first 
.br
\fIb\fP the second 
.RE
.PP
\fBReturns:\fP
.RS 4
the smaller of a and b 
.RE
.PP

.PP
Definition at line 48 of file vmath\&.c\&.
.PP
Referenced by calculate_current_display(), init_menu_float(), and init_menu_int()\&.
.PP
.nf
48                       {
49   if(a > b) return a;
50   return b;
51 }
.fi
.SS "int min (int a, int b)"

.PP
the min of two values 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP the first 
.br
\fIb\fP the second 
.RE
.PP
\fBReturns:\fP
.RS 4
the smaller of a and b 
.RE
.PP

.PP
Definition at line 42 of file vmath\&.c\&.
.PP
Referenced by calculate_current_display(), init_menu_float(), and init_menu_int()\&.
.PP
.nf
42                       {
43   if(a < b) return a;
44   return b;
45 }
.fi
.SS "double sind (double angle)"

.PP
sine of a angle in degrees 
.PP
Definition at line 37 of file vmath\&.c\&.
.PP
References M_PI\&.
.PP
.nf
37                           {
38     double angleradians = angle * M_PI / 180\&.0f;
39     return sin(angleradians);
40 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Vex Team 9228A from the source code\&.

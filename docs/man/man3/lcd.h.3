.TH "include/lcd.h" 3 "Sat Sep 9 2017" "Vex Team A" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/lcd.h \- LCD wrapper functions and macros\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <api\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <stdarg\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBlcd_buttons\fP"
.br
.RI "repreents the state of the lcd buttons "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBTOP_ROW\fP   1"
.br
.RI "The top row on the lcd screen\&. "
.ti -1c
.RI "#define \fBBOTTOM_ROW\fP   2"
.br
.RI "The bottom row on the lcd screen\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBbutton_state\fP { \fBRELEASED\fP = false, \fBPRESSED\fP = true }
.RI "Repressents the state of a button\&. ""
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBlcd_set_backlight\fP (bool state)"
.br
.RI "sets the backlight of the lcd "
.ti -1c
.RI "\fBlcd_buttons\fP \fBlcd_get_pressed_buttons\fP ()"
.br
.RI "Returns the pressed buttons\&. "
.ti -1c
.RI "void \fBlcd_clear\fP ()"
.br
.RI "Clears the lcd\&. "
.ti -1c
.RI "void \fBinit_lcd\fP (\fBFILE\fP *lcd)"
.br
.RI "Initializes the lcd screen\&. Also will initialize the lcd_port var\&. Must be called before any lcd function can be called\&. "
.ti -1c
.RI "void \fBlcd_print\fP (unsigned int \fBline\fP, const char *str)"
.br
.RI "prints a string to a line on the lcd "
.ti -1c
.RI "void \fBlcd_printf\fP (unsigned int \fBline\fP, const char *format_str,\&.\&.\&.)"
.br
.RI "prints a formated string to a line on the lcd\&. Smilar to printf "
.ti -1c
.RI "void \fBpromt_confirmation\fP (const char *confirm_text)"
.br
.RI "Prompts the user to confirm a string\&. User must press middle button to confirm\&. Function is not thread safe and will stall a thread\&. "
.in -1c
.SH "Detailed Description"
.PP 
LCD wrapper functions and macros\&. 


.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/9/2017 
.RE
.PP

.PP
Definition in file \fBlcd\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define BOTTOM_ROW   2"

.PP
The bottom row on the lcd screen\&. 
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/9/2017 
.RE
.PP

.PP
Definition at line 28 of file lcd\&.h\&.
.SS "#define TOP_ROW   1"

.PP
The top row on the lcd screen\&. 
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/9/2017 
.RE
.PP

.PP
Definition at line 21 of file lcd\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBbutton_state\fP"

.PP
Repressents the state of a button\&. A button can be pressed of RELEASED\&. Release is false which is also 0\&. PRESSED is true or 1\&.
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/9/2017 
.RE
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIRELEASED \fP\fP
A released button 
.TP
\fB\fIPRESSED \fP\fP
A pressed button 
.PP
Definition at line 39 of file lcd\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void init_lcd (\fBFILE\fP * lcd)"

.PP
Initializes the lcd screen\&. Also will initialize the lcd_port var\&. Must be called before any lcd function can be called\&. 
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/9/2017 
.RE
.PP

.PP
Definition at line 109 of file lcd\&.h\&.
.SS "void lcd_clear ()\fC [inline]\fP"

.PP
Clears the lcd\&. 
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/9/2017 
.RE
.PP

.PP
Definition at line 98 of file lcd\&.h\&.
.SS "\fBlcd_buttons\fP lcd_get_pressed_buttons ()"

.PP
Returns the pressed buttons\&. 
.PP
\fBReturns:\fP
.RS 4
a struct containing the states of all three buttons\&. 
.RE
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/9/2017 
.RE
.PP

.PP
Definition at line 79 of file lcd\&.h\&.
.SS "void lcd_print (unsigned int line, const char * str)\fC [inline]\fP"

.PP
prints a string to a line on the lcd 
.PP
\fBParameters:\fP
.RS 4
\fIline\fP the line to print on 
.br
\fIstr\fP string to print 
.RE
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/9/2017 
.RE
.PP

.PP
Definition at line 121 of file lcd\&.h\&.
.SS "void lcd_printf (unsigned int line, const char * format_str,  \&.\&.\&.)\fC [inline]\fP"

.PP
prints a formated string to a line on the lcd\&. Smilar to printf 
.PP
\fBParameters:\fP
.RS 4
\fIline\fP the line to print on 
.br
\fIformat_string\fP format string string to print 
.RE
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/9/2017 
.RE
.PP

.PP
Definition at line 133 of file lcd\&.h\&.
.SS "void lcd_set_backlight (bool state)\fC [inline]\fP"

.PP
sets the backlight of the lcd 
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP a boolean representing the state of the backlight\&. true = on, false = off\&. 
.RE
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/9/2017 
.RE
.PP

.PP
Definition at line 144 of file lcd\&.h\&.
.SS "void promt_confirmation (const char * confirm_text)"

.PP
Prompts the user to confirm a string\&. User must press middle button to confirm\&. Function is not thread safe and will stall a thread\&. 
.PP
\fBParameters:\fP
.RS 4
\fIconfirm_text\fP the text for the user to confirm\&. 
.RE
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/9/2017 
.RE
.PP

.PP
Definition at line 158 of file lcd\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Vex Team A from the source code\&.

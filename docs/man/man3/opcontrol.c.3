.TH "src/opcontrol.c" 3 "Tue Nov 28 2017" "Version 1.1.4" "Vex Team 9228A" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/opcontrol.c \- File for operator control code\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'main\&.h'\fP
.br
\fC#include 'slew\&.h'\fP
.br
\fC#include 'drive\&.h'\fP
.br
\fC#include 'lifter\&.h'\fP
.br
\fC#include 'localization\&.h'\fP
.br
\fC#include 'claw\&.h'\fP
.br
\fC#include 'mobile_goal_intake\&.h'\fP
.br
\fC#include 'vmath\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBoperatorControl\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
File for operator control code\&. 

This file should contain the user \fBoperatorControl()\fP function and any functions related to it\&.
.PP
Any copyright is dedicated to the Public Domain\&. http://creativecommons.org/publicdomain/zero/1.0/
.PP
PROS contains FreeRTOS (http://www.freertos.org) whose source code may be obtained from http://sourceforge.net/projects/freertos/files/ or on request\&. 
.PP
Definition in file \fBopcontrol\&.c\fP\&.
.SH "Function Documentation"
.PP 
.SS "void operatorControl ()"
Runs the user operator control code\&. This function will be started in its own task with the default priority and stack size whenever the robot is enabled via the Field Management System or the VEX Competition Switch in the operator control mode\&. If the robot is disabled or communications is lost, the operator control task will be stopped by the kernel\&. Re-enabling the robot will restart the task, not resume it from where it left off\&.
.PP
If no VEX Competition Switch or Field Management system is plugged in, the VEX Cortex will run the operator control task\&. Be warned that this will also occur if the VEX Cortex is tethered directly to a computer via the USB A to A cable without any VEX Joystick attached\&.
.PP
Code running in this task can take almost any action, as the VEX Joystick is available and the scheduler is operational\&. However, proper use of \fBdelay()\fP or \fBtaskDelayUntil()\fP is highly recommended to give other tasks (including system tasks such as updating LCDs) time to run\&.
.PP
This task should never exit; it should end with some kind of infinite loop, even if empty\&. 
.PP
Definition at line 40 of file opcontrol\&.c\&.
.PP
References delay(), init_slew(), update_claw(), update_control(), update_drive_motors(), update_lifter(), and updateIntake()\&.
.PP
.nf
40                        {
41     init_slew();
42     delay(10);
43     while (1) {
44         update_drive_motors();
45         update_lifter();
46         update_claw();
47         updateIntake();
48         update_control();
49         delay(25);
50     }
51 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Vex Team 9228A from the source code\&.

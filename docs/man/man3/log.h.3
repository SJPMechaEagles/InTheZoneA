.TH "include/log.h" 3 "Tue Nov 28 2017" "Version 1.1.4" "Vex Team 9228A" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/log.h \- Contains logging functions\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <API\&.h>\fP
.br
\fC#include 'lcd\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDEBUG\fP   4"
.br
.RI "logging only info debug\&. most verbose level "
.ti -1c
.RI "#define \fBERROR\fP   1"
.br
.RI "logging only errors\&. Also displays error to lcd "
.ti -1c
.RI "#define \fBINFO\fP   3"
.br
.RI "logging only info messages and higher\&. "
.ti -1c
.RI "#define \fBNONE\fP   0"
.br
.RI "No logging\&. Should be used in competition to reduce serial communication\&. "
.ti -1c
.RI "#define \fBWARNING\fP   2"
.br
.RI "logs errors and warnings\&. Also displays error to lcd "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBdebug\fP (const char *debug_message)"
.br
.RI "prints a info message "
.ti -1c
.RI "void \fBerror\fP (const char *error_message)"
.br
.RI "prints a error message and displays on lcd\&. Only will print and display if log_level is greater than NONE "
.ti -1c
.RI "void \fBinfo\fP (const char *info_message)"
.br
.RI "prints a info message "
.ti -1c
.RI "void \fBinit_error\fP (bool use_lcd, \fBFILE\fP *lcd)"
.br
.RI "Initializes the error lcd system Only required if using lcd\&. "
.ti -1c
.RI "void \fBwarning\fP (const char *warning_message)"
.br
.RI "prints a warning message and displays on lcd\&. Only will print and display if log_level is greater than NONE "
.in -1c
.SH "Detailed Description"
.PP 
Contains logging functions\&. 


.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/16/2017 
.RE
.PP

.PP
Definition in file \fBlog\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define DEBUG   4"

.PP
logging only info debug\&. most verbose level 
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/10/17 
.RE
.PP

.PP
Definition at line 50 of file log\&.h\&.
.SS "#define ERROR   1"

.PP
logging only errors\&. Also displays error to lcd 
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/10/17 
.RE
.PP

.PP
Definition at line 27 of file log\&.h\&.
.PP
Referenced by debug(), and info()\&.
.SS "#define INFO   3"

.PP
logging only info messages and higher\&. 
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/10/17 
.RE
.PP

.PP
Definition at line 42 of file log\&.h\&.
.SS "#define NONE   0"

.PP
No logging\&. Should be used in competition to reduce serial communication\&. 
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/10/17 
.RE
.PP

.PP
Definition at line 19 of file log\&.h\&.
.PP
Referenced by error()\&.
.SS "#define WARNING   2"

.PP
logs errors and warnings\&. Also displays error to lcd 
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/10/17 
.RE
.PP

.PP
Definition at line 35 of file log\&.h\&.
.PP
Referenced by warning()\&.
.SH "Function Documentation"
.PP 
.SS "void debug (const char * debug_message)"

.PP
prints a info message Only will print and display if log_level is greater than info 
.PP
\fBSee also:\fP
.RS 4
\fBlog_level\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdebug_message\fP the message 
.RE
.PP

.PP
Definition at line 37 of file log\&.c\&.
.PP
References ERROR, log_level, and printf()\&.
.PP
Referenced by set_motor_immediate(), and set_motor_slew()\&.
.PP
.nf
37                                       {
38   if(log_level>ERROR) {
39     printf("[INFO]: %s\n", debug_message);
40   }
41 }
.fi
.SS "void error (const char * error_message)"

.PP
prints a error message and displays on lcd\&. Only will print and display if log_level is greater than NONE 
.PP
\fBSee also:\fP
.RS 4
\fBlog_level\fP 
.RE
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/10/17 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIerror_message\fP the message 
.RE
.PP

.PP
Definition at line 21 of file log\&.c\&.
.PP
References log_info(), log_level, and NONE\&.
.PP
Referenced by create_menu()\&.
.PP
.nf
21                                       {
22   if(log_level>NONE)
23     log_info("ERROR", error_message);
24 }
.fi
.SS "void info (const char * info_message)"

.PP
prints a info message Only will print and display if log_level is greater than ERROR 
.PP
\fBSee also:\fP
.RS 4
\fBlog_level\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIinfo_message\fP the message 
.RE
.PP

.PP
Definition at line 31 of file log\&.c\&.
.PP
References ERROR, log_level, and printf()\&.
.PP
Referenced by init_slew()\&.
.PP
.nf
31                                     {
32   if(log_level>ERROR) {
33     printf("[INFO]: %s\n", info_message);
34   }
35 }
.fi
.SS "void init_error (bool use_lcd, \fBFILE\fP * lcd)"

.PP
Initializes the error lcd system Only required if using lcd\&. 
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/10/17 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIuse_lcd\fP whether to use the lcd 
.br
\fIlcd\fP the lcd 
.RE
.PP

.PP
Definition at line 6 of file log\&.c\&.
.PP
References lcdInit(), and log_lcd\&.
.PP
.nf
6                                          {
7   if(use_lcd) {
8     lcdInit(lcd);
9     log_lcd = lcd;
10   }
11 }
.fi
.SS "void warning (const char * warning_message)"

.PP
prints a warning message and displays on lcd\&. Only will print and display if log_level is greater than NONE 
.PP
\fBSee also:\fP
.RS 4
\fBlog_level\fP 
.RE
.PP
\fBAuthor:\fP
.RS 4
Chris Jerrett 
.RE
.PP
\fBDate:\fP
.RS 4
9/10/17 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIwarning_message\fP the message 
.RE
.PP

.PP
Definition at line 26 of file log\&.c\&.
.PP
References log_info(), log_level, and WARNING\&.
.PP
Referenced by init_slew()\&.
.PP
.nf
26                                           {
27   if(log_level>WARNING)
28     log_info("WARNING", warning_message);
29 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Vex Team 9228A from the source code\&.

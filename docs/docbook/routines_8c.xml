<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="routines_8c">
    <title>routines.c File Reference</title>
    <programlisting>#include &quot;routines.h&quot;</programlisting>
    <programlisting>#include &quot;controller.h&quot;</programlisting>
    <programlisting>#include &quot;list.h&quot;</programlisting>
    <programlisting>#include &quot;log.h&quot;</programlisting>
    <programlisting>#include &quot;toggle.h&quot;</programlisting>
    <programlisting>#include &lt;API.h&gt;</programlisting>
        <section>
            <title>Variables</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="structlist__t">list_t</link> * <link linkend="routines_8c_1a4d70ab7b0355718354a9678801101aa2">routine_list</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static TaskHandle <link linkend="routines_8c_1a8ac8c8354c257b390c000a5153f4fec6">routine_task_var</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="routines_8c_1ad908adbc884189372f72f882ec62d71d">deinit_routines</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="routines_8c_1ab873e24fcc59a2bf7844618b664a5d26">init_routine</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="routines_8c_1a4bf3e235fcde5f0e1ce1f693cbb9c01c">register_routine</link> (
void(*)() routine, <link linkend="controller_8h_1a7754652ebe470fb6cc5d30b4cd258660">button_t</link> on_buttons, <link linkend="controller_8h_1a7754652ebe470fb6cc5d30b4cd258660">button_t</link> * prohibited_buttons)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="routines_8c_1a230cdcefb410a429fb6baba1f88fc9ba">routine_task</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /Users/chrisjerrett/Desktop/InTheZoneA/src/routines.c</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="routines_8h">routines.h</link>&quot;</emphasis>
2 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="controller_8h">controller.h</link>&quot;</emphasis>
3 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="list_8h">list.h</link>&quot;</emphasis>
4 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="log_8h">log.h</link>&quot;</emphasis>
5 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="toggle_8h">toggle.h</link>&quot;</emphasis>
6 <emphasis class="preprocessor">#include&#32;&lt;API.h&gt;</emphasis>
7 
<link linkend="routines_8c_1a4d70ab7b0355718354a9678801101aa2">8 </link><emphasis class="keyword">static</emphasis>&#32;<link linkend="structlist__t">list_t</link>&#32;*<link linkend="routines_8c_1a4d70ab7b0355718354a9678801101aa2">routine_list</link>;
9 
<link linkend="routines_8c_1a8ac8c8354c257b390c000a5153f4fec6">10 </link><emphasis class="keyword">static</emphasis>&#32;TaskHandle&#32;<link linkend="routines_8c_1a8ac8c8354c257b390c000a5153f4fec6">routine_task_var</link>;
11 
<link linkend="routines_8c_1a230cdcefb410a429fb6baba1f88fc9ba">12 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="routines_8c_1a230cdcefb410a429fb6baba1f88fc9ba">routine_task</link>()&#32;{
13 &#32;&#32;<link linkend="structlist__node">list_node_t</link>&#32;*node;
14 &#32;&#32;<link linkend="structlist__iterator__t">list_iterator_t</link>&#32;*it&#32;=&#32;<link linkend="list_8h_1a3c956afda343b4a6aaf68fbd4b446733">list_iterator_new</link>(routine_list,&#32;<link linkend="list_8h_1a2c3af7de0b7ab9c3a84fbc039e75ec66abdf0fd732c6a91b57c5cbea177f1ae00">LIST_HEAD</link>);
15 &#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(it&#32;!=&#32;NULL)&#32;{
16 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(node&#32;=&#32;<link linkend="list_8h_1a2e5db981e32d3aef49ea79505a0615a6">list_iterator_next</link>(it))&#32;{
17 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(node-&gt;<link linkend="structlist__node_1a129de89b4c110fa54377ef16ab128ce0">val</link>&#32;!=&#32;NULL)&#32;{
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="structroutine__t">routine_t</link>&#32;*routine&#32;=&#32;(<link linkend="structroutine__t">routine_t</link>&#32;*)(node-&gt;<link linkend="structlist__node_1a129de89b4c110fa54377ef16ab128ce0">val</link>);
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(<link linkend="toggle_8h_1ae819f86fad1b51d66f4294140b53ff77">buttonIsNewPress</link>(routine-&gt;<link linkend="structroutine__t_1a4600cad285b5643e422cb5bfe6ce7fa4">on_button</link>))&#32;{
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;routine-&gt;<link linkend="structroutine__t_1a016f918d811a58ee2b63a5e48161dcf8">routine</link>();
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
22 &#32;&#32;&#32;&#32;&#32;&#32;}
23 &#32;&#32;&#32;&#32;}
24 &#32;&#32;}
25 &#32;&#32;<link linkend="list_8h_1ad16fa29ddbb444070ea65f871e1c0ba2">list_iterator_destroy</link>(it);
26 }
27 
<link linkend="routines_8c_1ab873e24fcc59a2bf7844618b664a5d26">28 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="routines_8c_1ab873e24fcc59a2bf7844618b664a5d26">init_routine</link>()&#32;{
29 &#32;&#32;routine_list&#32;=&#32;<link linkend="list_8h_1a9dd3eafdb56dcc64689f78fb4acdff3f">list_new</link>();
30 &#32;&#32;<link linkend="routines_8c_1a8ac8c8354c257b390c000a5153f4fec6">routine_task_var</link>&#32;=&#32;taskRunLoop(<link linkend="routines_8c_1a230cdcefb410a429fb6baba1f88fc9ba">routine_task</link>,&#32;20);
31 }
32 
<link linkend="routines_8c_1ad908adbc884189372f72f882ec62d71d">33 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="routines_8c_1ad908adbc884189372f72f882ec62d71d">deinit_routines</link>()&#32;{&#32;<link linkend="list_8h_1ac2d2be572a896cccd0e76d56eeefcbdb">list_destroy</link>(routine_list);&#32;}
34 
<link linkend="routines_8c_1a4bf3e235fcde5f0e1ce1f693cbb9c01c">35 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="routines_8c_1a4bf3e235fcde5f0e1ce1f693cbb9c01c">register_routine</link>(<emphasis class="keywordtype">void</emphasis>&#32;(*routine)(),&#32;<link linkend="controller_8h_1a7754652ebe470fb6cc5d30b4cd258660">button_t</link>&#32;on_buttons,
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="controller_8h_1a7754652ebe470fb6cc5d30b4cd258660">button_t</link>&#32;*prohibited_buttons)&#32;{
37 &#32;&#32;<emphasis class="keyword">struct&#32;</emphasis><link linkend="structroutine__t">routine_t</link>&#32;*r&#32;=&#32;(<emphasis class="keyword">struct&#32;</emphasis><link linkend="structroutine__t">routine_t</link>&#32;*)malloc(<emphasis class="keyword">sizeof</emphasis>(<link linkend="structroutine__t">routine_t</link>));
38 &#32;&#32;r-&gt;<link linkend="structroutine__t_1a8d278c682e01bd513956f9902772812a">blocked_buttons</link>&#32;=&#32;prohibited_buttons;
39 &#32;&#32;r-&gt;<link linkend="structroutine__t_1a016f918d811a58ee2b63a5e48161dcf8">routine</link>&#32;=&#32;<link linkend="structroutine__t_1a016f918d811a58ee2b63a5e48161dcf8">routine</link>;
40 &#32;&#32;r-&gt;<link linkend="structroutine__t_1a4600cad285b5643e422cb5bfe6ce7fa4">on_button</link>&#32;=&#32;on_buttons;
41 &#32;&#32;<link linkend="structlist__node">list_node_t</link>&#32;*node&#32;=&#32;<link linkend="list_8h_1a4ef36e0519514ac481d0d7e0b439d431">list_node_new</link>(r);
42 &#32;&#32;node-&gt;<link linkend="structlist__node_1a129de89b4c110fa54377ef16ab128ce0">val</link>&#32;=&#32;r;
43 &#32;&#32;<link linkend="list_8h_1a4edfa9b7742154bff4fc2cb05d044af9">list_rpush</link>(routine_list,&#32;node);
44 }
    </computeroutput></literallayout>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="localization_8c">
    <title>localization.c File Reference</title>
<para>Include dependency diagram for localization.c</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="localization_8c__incl.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Included by dependency diagram for localization.c</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="localization_8c__dep__incl.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title> Data Structures </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structaccelerometer__odometry">accelerometer_odometry</link></para>
<para><emphasis>Structure for holding an xy position from the accelerometer.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structencoder__odemtry">encoder_odemtry</link></para>
<para><emphasis>Structure for holding an xy position and an angle theta from the IMEs.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Variables</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="_a_p_i_8h_1a04e06985633aa933343fcfa3d7fb268d">Gyro</link> <link linkend="localization_8c_1a46b8f25ffa3bbee071a0468eac654393">g1</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="localization_8c_1a0f327d31da83831114e7417abb7b6b63">last_call</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="_a_p_i_8h_1a23dca3c0de10682afb982677ff292f77">TaskHandle</link> <link linkend="localization_8c_1a5be50f74f0f5a3aea13f2bd8db891488">localization_task</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="matrix_8h_1abc75382643898dd572498a574bf891c7">matrix</link> * <link linkend="localization_8c_1a424e677cc0238390cb4a3068a6f3518c">state_matrix</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct <link linkend="structaccelerometer__odometry">accelerometer_odometry</link> <link linkend="localization_8c_1a6785e4b3b61887f28028f05019b9b39d">calculate_accelerometer_odemetry</link> (
)<para><emphasis>calculats the robot&apos;s position using the accelerometer</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static double <link linkend="localization_8c_1a3774a84284eeb9f5efa7c23aa5ffcd9e">calculate_angle</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="localization_8c_1a5dd17937f5561711cd12cdefa8d31869">calculate_encoder_angle</link> (
)<para><emphasis>calculates the current angle using the IMEs</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="localization_8c_1a1cb0c9fa1e6ff2079deb836569d75d87">calculate_encoder_odemetry</link> (
)<para><emphasis>calculates the x y posistion of the robot based upon the IMEs</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static double <link linkend="localization_8c_1aa849dcc7cd296f4556fab3b57c1c4d3e">calculate_gryo_anglular_velocity</link> (
)<para><emphasis>calculates the angular velocity using the gyro positions</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structlocation">location</link> <link linkend="localization_8c_1aadbff35bb757f60bc348d4d778f57a2f">get_position</link> (
)<para><emphasis>Gets the current posituion of the robot.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="localization_8c_1afdd0147de6aa15957e9a125f9cd20578">init_localization</link> (
const unsigned char gyro1, unsigned short multiplier, int start_x, int start_y, int start_theta)<para><emphasis>initializes the localization</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static double <link linkend="localization_8c_1ac103fff038e59ff45f292b9b5138182e">integrate_gyro_w</link> (
int new_w)<para><emphasis>Increases the stored angle based upon the update frequency and the
current angular velocity.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="localization_8c_1afacd5e0b3d5e677df26a4402bbd9ec9e">update_position</link> (
)<para><emphasis>Updates the position from the localization.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /Users/chrisjerrett/Desktop/InTheZoneA/src/localization.c</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="localization_8h">localization.h</link>&quot;</emphasis>
2 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="vmath_8h">vmath.h</link>&quot;</emphasis>
3 <emphasis class="preprocessor">#include&#32;&lt;inttypes.h&gt;</emphasis>
4 
<link linkend="localization_8c_1a46b8f25ffa3bbee071a0468eac654393">5 </link><emphasis class="keyword">static</emphasis>&#32;<link linkend="_a_p_i_8h_1a04e06985633aa933343fcfa3d7fb268d">Gyro</link>&#32;<link linkend="localization_8c_1a46b8f25ffa3bbee071a0468eac654393">g1</link>;
<link linkend="localization_8c_1a5be50f74f0f5a3aea13f2bd8db891488">6 </link><emphasis class="keyword">static</emphasis>&#32;<link linkend="_a_p_i_8h_1a23dca3c0de10682afb982677ff292f77">TaskHandle</link>&#32;<link linkend="localization_8c_1a5be50f74f0f5a3aea13f2bd8db891488">localization_task</link>;
7 
<link linkend="localization_8c_1a0f327d31da83831114e7417abb7b6b63">8 </link><emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;<link linkend="localization_8c_1a0f327d31da83831114e7417abb7b6b63">last_call</link>&#32;=&#32;0;
9 
<link linkend="localization_8c_1a424e677cc0238390cb4a3068a6f3518c">10 </link><link linkend="struct__matrix">matrix</link>&#32;*<link linkend="localization_8c_1a424e677cc0238390cb4a3068a6f3518c">state_matrix</link>;
11 
<link linkend="structencoder__odemtry">15 </link><emphasis class="keyword">struct&#32;</emphasis><link linkend="structencoder__odemtry">encoder_odemtry</link>&#32;{
<link linkend="structencoder__odemtry_1a9a803978381f9b89a031d520a627cbcf">16 </link>&#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;<link linkend="structencoder__odemtry_1a9a803978381f9b89a031d520a627cbcf">x</link>;
<link linkend="structencoder__odemtry_1a955cbea800158b8c0cd5f36b253fe6bb">17 </link>&#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;<link linkend="structencoder__odemtry_1a955cbea800158b8c0cd5f36b253fe6bb">y</link>;
<link linkend="structencoder__odemtry_1af1a1e2a2a7a2f89138a8c261a3b82898">18 </link>&#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;<link linkend="structencoder__odemtry_1af1a1e2a2a7a2f89138a8c261a3b82898">theta</link>;
19 };
20 
<link linkend="structaccelerometer__odometry">24 </link><emphasis class="keyword">struct&#32;</emphasis><link linkend="structaccelerometer__odometry">accelerometer_odometry</link>&#32;{
<link linkend="structaccelerometer__odometry_1a83af671d99413a7c480678d5abb9c64a">25 </link>&#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;<link linkend="structaccelerometer__odometry_1a83af671d99413a7c480678d5abb9c64a">x</link>;
<link linkend="structaccelerometer__odometry_1a4d812f516efdd477ae9f74fca2a07a2b">26 </link>&#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;<link linkend="structaccelerometer__odometry_1a4d812f516efdd477ae9f74fca2a07a2b">y</link>;
27 };
28 
29 <emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">double</emphasis>&#32;<link linkend="localization_8c_1a3774a84284eeb9f5efa7c23aa5ffcd9e">calculate_angle</link>();
30 <emphasis class="keyword">static</emphasis>&#32;<emphasis class="keyword">struct&#32;</emphasis><link linkend="structaccelerometer__odometry">accelerometer_odometry</link>&#32;<link linkend="localization_8c_1a6785e4b3b61887f28028f05019b9b39d">calculate_accelerometer_odemetry</link>();
31 
<link linkend="localization_8c_1aadbff35bb757f60bc348d4d778f57a2f">38 </link><emphasis class="keyword">struct&#32;</emphasis><link linkend="structlocation">location</link>&#32;<link linkend="localization_8c_1aadbff35bb757f60bc348d4d778f57a2f">get_position</link>()&#32;{}
39 
<link linkend="localization_8c_1afacd5e0b3d5e677df26a4402bbd9ec9e">45 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="localization_8c_1afacd5e0b3d5e677df26a4402bbd9ec9e">update_position</link>()&#32;{
46 &#32;&#32;<emphasis class="comment">//&#32;int&#32;curr_theta&#32;=&#32;calculate_angle();</emphasis>
47 
48 &#32;&#32;<emphasis class="keyword">struct&#32;</emphasis><link linkend="structaccelerometer__odometry">accelerometer_odometry</link>&#32;oddem&#32;=&#32;<link linkend="localization_8c_1a6785e4b3b61887f28028f05019b9b39d">calculate_accelerometer_odemetry</link>();
49 &#32;&#32;<emphasis class="comment">//&#32;printf(&quot;x:&#32;%d&#32;y:&#32;%d&#32;T:&#32;%d\n&quot;,&#32;a.x,&#32;a.y,&#32;0);</emphasis>
50 
51 &#32;&#32;<emphasis class="comment">/*int&#32;l&#32;=&#32;1;</emphasis>
52 <emphasis class="comment">&#32;&#32;int&#32;vr&#32;=&#32;get_encoder_velocity(1);</emphasis>
53 <emphasis class="comment">&#32;&#32;int&#32;vl&#32;=&#32;get_encoder_velocity(2);</emphasis>
54 <emphasis class="comment">&#32;&#32;int&#32;theta_dot&#32;=&#32;(vr&#32;-&#32;vl)&#32;/&#32;l;</emphasis>
55 <emphasis class="comment">&#32;&#32;int&#32;curr_theta&#32;=&#32;theta&#32;+&#32;theta_dot;</emphasis>
56 <emphasis class="comment">&#32;&#32;double&#32;dt&#32;=&#32;LOCALIZATION_UPDATE_FREQUENCY;</emphasis>
57 <emphasis class="comment">&#32;&#32;double&#32;v_tot&#32;=&#32;(vr+vl)/2.0;</emphasis>
58 <emphasis class="comment">&#32;&#32;int&#32;x_curr&#32;=&#32;x&#32;-&#32;v_tot*dt*sin(curr_theta);</emphasis>
59 <emphasis class="comment">&#32;&#32;int&#32;y_curr&#32;=&#32;y&#32;+&#32;v_tot*dt*cos(curr_theta);</emphasis>
60 <emphasis class="comment">&#32;&#32;x&#32;=&#32;x_curr;</emphasis>
61 <emphasis class="comment">&#32;&#32;y&#32;=&#32;y_curr;*/</emphasis>
62 &#32;&#32;<link linkend="localization_8c_1a0f327d31da83831114e7417abb7b6b63">last_call</link>&#32;=&#32;<link linkend="_a_p_i_8h_1a6ff7f2532a22366f0013bc41397129fd">millis</link>();
63 }
<link linkend="localization_8c_1a6785e4b3b61887f28028f05019b9b39d">70 </link><emphasis class="keyword">static</emphasis>&#32;<emphasis class="keyword">struct&#32;</emphasis><link linkend="structaccelerometer__odometry">accelerometer_odometry</link>&#32;<link linkend="localization_8c_1a6785e4b3b61887f28028f05019b9b39d">calculate_accelerometer_odemetry</link>()&#32;{
71 &#32;&#32;<emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">double</emphasis>&#32;vel_acumm_x&#32;=&#32;0;
72 &#32;&#32;<emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">double</emphasis>&#32;vel_acumm_y&#32;=&#32;0;
73 
74 &#32;&#32;int32_t&#32;accel_x_rel&#32;=&#32;(int32_t)<link linkend="_a_p_i_8h_1a68b2c3e0863b8f4cb022fcdd77d2f5fd">analogReadCalibratedHR</link>(2);
75 &#32;&#32;int32_t&#32;accel_y_rel&#32;=&#32;(int32_t)<link linkend="_a_p_i_8h_1a68b2c3e0863b8f4cb022fcdd77d2f5fd">analogReadCalibratedHR</link>(3);
76 
77 &#32;&#32;<emphasis class="comment">//&#32;Ignore&#32;atom&#32;format&#32;string&#32;errors</emphasis>
78 &#32;&#32;<link linkend="_a_p_i_8h_1a403c82418e475fa4a8273719e6a7f3e6">printf</link>(<emphasis class="stringliteral">&quot;x:&#32;%+&quot;</emphasis>&#32;PRId32&#32;<emphasis class="stringliteral">&quot;&#32;y:&#32;%+&quot;</emphasis>&#32;PRId32&#32;<emphasis class="stringliteral">&quot;\n&quot;</emphasis>,&#32;accel_x_rel,&#32;accel_y_rel);
79 
80 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;delta_time&#32;=&#32;((<link linkend="_a_p_i_8h_1a6ff7f2532a22366f0013bc41397129fd">millis</link>()&#32;-&#32;<link linkend="localization_8c_1a0f327d31da83831114e7417abb7b6b63">last_call</link>)&#32;/&#32;1000.0);
81 &#32;&#32;<emphasis class="comment">//&#32;double&#32;accel_x_abs&#32;=&#32;(accel_x_rel&#32;*&#32;&#32;cos(theta)&#32;+&#32;accel_y_rel&#32;*&#32;sin(theta))</emphasis>
82 &#32;&#32;<emphasis class="comment">//&#32;*&#32;delta_time;&#32;&#32;double&#32;accel_y_abs&#32;=&#32;(accel_y_rel&#32;*&#32;&#32;cos(theta)&#32;+</emphasis>
83 &#32;&#32;<emphasis class="comment">//&#32;accel_x_rel</emphasis>
84 &#32;&#32;<emphasis class="comment">//&#32;*&#32;sin(theta))&#32;*&#32;delta_time;</emphasis>
85 
86 &#32;&#32;<emphasis class="comment">//&#32;vel_acumm_x&#32;+=&#32;accel_x_abs;</emphasis>
87 &#32;&#32;<emphasis class="comment">//&#32;vel_acumm_y&#32;+=&#32;accel_y_abs;</emphasis>
88 
89 &#32;&#32;<emphasis class="comment">//&#32;double&#32;new_x&#32;=&#32;x&#32;+&#32;vel_acumm_x&#32;*&#32;delta_time;</emphasis>
90 &#32;&#32;<emphasis class="comment">//&#32;double&#32;new_y&#32;=&#32;y&#32;+&#32;vel_acumm_y&#32;*&#32;delta_time;</emphasis>
91 
92 &#32;&#32;<emphasis class="keyword">struct&#32;</emphasis><link linkend="structaccelerometer__odometry">accelerometer_odometry</link>&#32;od;
93 &#32;&#32;<emphasis class="comment">//&#32;od.x&#32;=&#32;new_x;</emphasis>
94 &#32;&#32;<emphasis class="comment">//&#32;od.y&#32;=&#32;new_y;</emphasis>
95 &#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;od;
96 }
97 
<link linkend="localization_8c_1ac103fff038e59ff45f292b9b5138182e">104 </link><emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">double</emphasis>&#32;<link linkend="localization_8c_1ac103fff038e59ff45f292b9b5138182e">integrate_gyro_w</link>(<emphasis class="keywordtype">int</emphasis>&#32;new_w)&#32;{
105 &#32;&#32;<emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">double</emphasis>&#32;<link linkend="structencoder__odemtry_1af1a1e2a2a7a2f89138a8c261a3b82898">theta</link>&#32;=&#32;0;
106 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;delta_theta&#32;=&#32;new_w&#32;*&#32;LOCALIZATION_UPDATE_FREQUENCY;
107 &#32;&#32;theta&#32;+=&#32;delta_theta;
108 &#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;<link linkend="structencoder__odemtry_1af1a1e2a2a7a2f89138a8c261a3b82898">theta</link>;
109 }
110 
<link linkend="localization_8c_1aa849dcc7cd296f4556fab3b57c1c4d3e">116 </link><emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">double</emphasis>&#32;<link linkend="localization_8c_1aa849dcc7cd296f4556fab3b57c1c4d3e">calculate_gryo_anglular_velocity</link>()&#32;{
117 &#32;&#32;<emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;last_gyro&#32;=&#32;0;
118 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;current&#32;=&#32;<link linkend="_a_p_i_8h_1a0ae2ca5d2fd99f33aaef38786bb8ee59">gyroGet</link>(<link linkend="localization_8c_1a46b8f25ffa3bbee071a0468eac654393">g1</link>);
119 &#32;&#32;<emphasis class="comment">//&#32;Calculate&#32;w&#32;(angluar&#32;velocity&#32;in&#32;degrees&#32;per&#32;second)</emphasis>
120 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;w&#32;=&#32;(current&#32;-&#32;last_gyro)&#32;/&#32;(LOCALIZATION_UPDATE_FREQUENCY&#32;/&#32;1000.0);
121 &#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;w;
122 }
123 
<link linkend="localization_8c_1a5dd17937f5561711cd12cdefa8d31869">129 </link><emphasis class="keywordtype">int</emphasis>&#32;<link linkend="localization_8c_1a5dd17937f5561711cd12cdefa8d31869">calculate_encoder_angle</link>()&#32;{
130 <emphasis class="preprocessor">#define&#32;WIDTH&#32;13.5</emphasis>
131 <emphasis class="preprocessor">#define&#32;CPR&#32;392.0</emphasis>
132 <emphasis class="preprocessor">#define&#32;WHEEL_RADIUS&#32;2</emphasis>
133 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;dist_r&#32;=&#32;<link linkend="encoders_8h_1aed261dd4dae33a48c42f2e363c84760f">get_encoder_ticks</link>(0)&#32;/&#32;CPR;
134 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;dist_l&#32;=&#32;<link linkend="encoders_8h_1aed261dd4dae33a48c42f2e363c84760f">get_encoder_ticks</link>(1)&#32;/&#32;CPR;
135 &#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;((dist_r&#32;-&#32;dist_l)&#32;/&#32;WIDTH);
136 }
137 
<link linkend="localization_8c_1a1cb0c9fa1e6ff2079deb836569d75d87">142 </link><emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="localization_8c_1a1cb0c9fa1e6ff2079deb836569d75d87">calculate_encoder_odemetry</link>()&#32;{
143 <emphasis class="preprocessor">#define&#32;WIDTH&#32;13.5</emphasis>
144 <emphasis class="preprocessor">#define&#32;CPR&#32;392.0</emphasis>
145 <emphasis class="preprocessor">#define&#32;WHEEL_RADIUS&#32;2</emphasis>
146 
147 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;dist_r&#32;=&#32;<link linkend="encoders_8h_1aed261dd4dae33a48c42f2e363c84760f">get_encoder_ticks</link>(0)&#32;/&#32;CPR;
148 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;dist_l&#32;=&#32;<link linkend="encoders_8h_1aed261dd4dae33a48c42f2e363c84760f">get_encoder_ticks</link>(1)&#32;/&#32;CPR;
149 &#32;&#32;<link linkend="_a_p_i_8h_1a403c82418e475fa4a8273719e6a7f3e6">printf</link>(<emphasis class="stringliteral">&quot;dist_r:&#32;%d&#32;dist_l:&#32;%d\n&quot;</emphasis>,&#32;dist_r,&#32;dist_l);
150 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;<link linkend="structencoder__odemtry_1af1a1e2a2a7a2f89138a8c261a3b82898">theta</link>&#32;=&#32;(dist_l&#32;-&#32;dist_r)&#32;/&#32;WIDTH;
151 &#32;&#32;<link linkend="_a_p_i_8h_1a403c82418e475fa4a8273719e6a7f3e6">printf</link>(<emphasis class="stringliteral">&quot;theta:&#32;%d\n&quot;</emphasis>,&#32;theta);
152 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;arc_length&#32;=&#32;((M_PI&#32;*&#32;<link linkend="structencoder__odemtry_1af1a1e2a2a7a2f89138a8c261a3b82898">theta</link>)&#32;*&#32;(WIDTH&#32;*&#32;WIDTH)&#32;/&#32;(8));
153 }
154 
<link linkend="localization_8c_1afdd0147de6aa15957e9a125f9cd20578">160 </link><emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="localization_8c_1afdd0147de6aa15957e9a125f9cd20578">init_localization</link>(<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">char</emphasis>&#32;gyro1,&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">short</emphasis>&#32;multiplier,
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;start_x,&#32;<emphasis class="keywordtype">int</emphasis>&#32;start_y,&#32;<emphasis class="keywordtype">int</emphasis>&#32;start_theta)&#32;{
162 &#32;&#32;<link linkend="localization_8c_1a46b8f25ffa3bbee071a0468eac654393">g1</link>&#32;=&#32;<link linkend="_a_p_i_8h_1a17270080a32b64937a3669089a80120f">gyroInit</link>(gyro1,&#32;multiplier);
163 &#32;&#32;<emphasis class="comment">//&#32;init&#32;state&#32;matrix</emphasis>
164 
165 &#32;&#32;<emphasis class="comment">//&#32;one&#32;dimensional&#32;vector&#32;with&#32;x,&#32;y,&#32;theta,&#32;acceleration&#32;in&#32;x&#32;and&#32;y</emphasis>
166 &#32;&#32;state_matrix&#32;=&#32;<link linkend="matrix_8h_1aae8b56c6fb44d9147b835f4006ca872c">makeMatrix</link>(1,&#32;5);
167 &#32;&#32;<link linkend="localization_8c_1a5be50f74f0f5a3aea13f2bd8db891488">localization_task</link>&#32;=
168 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a_p_i_8h_1ab05a241d6d1fd98b1ceb4665db678156">taskRunLoop</link>(<link linkend="localization_8c_1afacd5e0b3d5e677df26a4402bbd9ec9e">update_position</link>,&#32;LOCALIZATION_UPDATE_FREQUENCY&#32;*&#32;1000);
169 &#32;&#32;<link linkend="localization_8c_1a0f327d31da83831114e7417abb7b6b63">last_call</link>&#32;=&#32;<link linkend="_a_p_i_8h_1a6ff7f2532a22366f0013bc41397129fd">millis</link>();
170 &#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;<emphasis class="keyword">true</emphasis>;
171 }
    </computeroutput></literallayout>
</section>

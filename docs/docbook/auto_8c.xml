<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="auto_8c">
    <title>auto.c File Reference</title>
<para>Include dependency diagram for auto.c</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="auto_8c__incl.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Included by dependency diagram for auto.c</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="auto_8c__dep__incl.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="auto_8c_1a42084538c07a7089a1fe425c4f97650a">auton_drive_towards_mobile_goal</link> (
int counts_drive, int counts_drive_left, int counts_drive_right)<para><emphasis>Drives the robot forward until it reaches the mobile goal.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="auto_8c_1a55085901854f29969753bfd62c70049c">auton_raise_sec_lifter_max</link> (
)<para><emphasis>utility function which raises the second lifter to its maximum height</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="auto_8c_1a51a62a1a0851cc5939a2c6034849e380">auton_rasie_main_lifter</link> (
)<para><emphasis>utility function to raise the mainlifter to the mobile goal height</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="auto_8c_1a8141105864165fcb16d70f7cc72a1b6f">auton_turn_180</link> (
)<para><emphasis>Rotates the robot 180 degrees clockwise.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="auto_8c_1a3c7ca506bbc071fa740de13805b7f376">autonomous</link> (
)<para><emphasis>Runs the user autonomous code.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="auto_8c_1a64bd65456b81f16eb4ff67237159f984">deploy_seoncdary_lifter</link> (
)<para><emphasis>utility function which deploys the secondary lifter at the start of autonomous.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="auto_8c_1ac033c02ada6071c5f064cac73bead0fd">setup_ime_auton</link> (
int * counts_drive_left, int * counts_drive_right, int * counts_drive)<para><emphasis>sets up the IMEs for the autonomous portion.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="auto_8c_1ae66ea80c777135c9f4d288a05f40ca86">start_auton</link> (
)<para><emphasis>Starts the auntonomous program.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>

<para>File for autonomous code. </para>

<para>This file should contain the user <link linkend="auto_8c_1a3c7ca506bbc071fa740de13805b7f376">autonomous()</link> function and any functions related to it.</para>

<para>Any copyright is dedicated to the Public Domain. <link xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</link></para>

<para>PROS contains FreeRTOS (<link xlink:href="http://www.freertos.org">http://www.freertos.org</link>) whose source code may be obtained from <link xlink:href="http://sourceforge.net/projects/freertos/files/">http://sourceforge.net/projects/freertos/files/</link> or on request. </para>
    <para>Definition in file /Users/chrisjerrett/Desktop/InTheZoneA/src/auto.c</para>
    </simplesect>
    <literallayout><computeroutput>
1 
13 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="auto_8h">auto.h</link>&quot;</emphasis>
14 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="log_8h">log.h</link>&quot;</emphasis>
15 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="slew_8h">slew.h</link>&quot;</emphasis>
16 
<link linkend="auto_8c_1ac033c02ada6071c5f064cac73bead0fd">24 </link><emphasis class="keyword">static</emphasis>&#32;<emphasis class="keyword">inline</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="auto_8c_1ac033c02ada6071c5f064cac73bead0fd">setup_ime_auton</link>(<emphasis class="keywordtype">int</emphasis>&#32;*counts_drive_left,
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;*counts_drive_right,&#32;<emphasis class="keywordtype">int</emphasis>&#32;*counts_drive)&#32;{
26 &#32;&#32;<link linkend="_a_p_i_8h_1ab1ef9ee5f8878856896a6c920ed762fc">imeReset</link>(MID_LEFT_DRIVE);
27 &#32;&#32;<link linkend="_a_p_i_8h_1ab1ef9ee5f8878856896a6c920ed762fc">imeReset</link>(MID_RIGHT_DRIVE);
28 &#32;&#32;<emphasis class="comment">//&#32;Set&#32;initial&#32;values&#32;for&#32;how&#32;far&#32;the&#32;wheels&#32;have&#32;gone</emphasis>
29 &#32;&#32;<link linkend="_a_p_i_8h_1ac4f1500418a729ac3ee95bce9768b20c">imeGet</link>(MID_LEFT_DRIVE,&#32;counts_drive_left);
30 &#32;&#32;<link linkend="_a_p_i_8h_1ac4f1500418a729ac3ee95bce9768b20c">imeGet</link>(MID_RIGHT_DRIVE,&#32;counts_drive_right);
31 &#32;&#32;*counts_drive&#32;=&#32;*counts_drive_left&#32;+&#32;*counts_drive_right;
32 &#32;&#32;*counts_drive&#32;/=&#32;2;
33 }
38 <emphasis class="keyword">static</emphasis>&#32;<emphasis class="keyword">inline</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>
<link linkend="auto_8c_1ae66ea80c777135c9f4d288a05f40ca86">39 </link><link linkend="auto_8c_1ae66ea80c777135c9f4d288a05f40ca86">start_auton</link>()&#32;{&#32;<emphasis class="comment">//&#32;starts&#32;the&#32;slew&#32;rate&#32;controller&#32;to&#32;prevent&#32;ptc&#32;trips</emphasis>
40 &#32;&#32;<link linkend="slew_8h_1a321758941d88b75783955c819bb75005">init_slew</link>();
41 
42 &#32;&#32;<link linkend="_a_p_i_8h_1a1c59207742a1acf45a8957d7f04f9dfe">delay</link>(10);
43 &#32;&#32;<link linkend="log_8h_1a1606d750e1bb8de9f9e917172bba3382">info</link>(<emphasis class="stringliteral">&quot;AUTO&quot;</emphasis>);
44 }
45 
<link linkend="auto_8c_1a64bd65456b81f16eb4ff67237159f984">50 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="auto_8c_1a64bd65456b81f16eb4ff67237159f984">deploy_seoncdary_lifter</link>()&#32;{
51 &#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(<link linkend="_a_p_i_8h_1a5da86064604c539c2b6a5e2993289108">analogRead</link>(SECONDARY_LIFTER_POT_PORT)&#32;&lt;&#32;DEPLOY_HEIGHT)&#32;{
52 &#32;&#32;&#32;&#32;<link linkend="lifter_8h_1a78640d547d9361951a92d0bc00939536">set_secondary_lifter_motors</link>(MAX_SPEED);
53 &#32;&#32;}
54 &#32;&#32;<link linkend="lifter_8h_1a78640d547d9361951a92d0bc00939536">set_secondary_lifter_motors</link>(0);
55 }
56 
<link linkend="auto_8c_1a55085901854f29969753bfd62c70049c">62 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="auto_8c_1a55085901854f29969753bfd62c70049c">auton_raise_sec_lifter_max</link>()&#32;{
63 &#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(<link linkend="_a_p_i_8h_1a5da86064604c539c2b6a5e2993289108">analogRead</link>(SECONDARY_LIFTER_POT_PORT)&#32;&lt;&#32;MAX_HEIGHT)&#32;{
64 &#32;&#32;&#32;&#32;<link linkend="lifter_8h_1a78640d547d9361951a92d0bc00939536">set_secondary_lifter_motors</link>(MAX_SPEED);
65 &#32;&#32;}
66 &#32;&#32;<link linkend="lifter_8h_1a78640d547d9361951a92d0bc00939536">set_secondary_lifter_motors</link>(0);
67 }
68 
<link linkend="auto_8c_1a51a62a1a0851cc5939a2c6034849e380">73 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="auto_8c_1a51a62a1a0851cc5939a2c6034849e380">auton_rasie_main_lifter</link>()&#32;{
74 &#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(<link linkend="_a_p_i_8h_1a5da86064604c539c2b6a5e2993289108">analogRead</link>(MAIN_LIFTER_POT)&#32;&lt;&#32;MOBILE_GOAL_HEIGHT)&#32;{
75 &#32;&#32;&#32;&#32;<link linkend="lifter_8h_1ad00a195af30f246924d6e1a30095b882">set_main_lifter_motors</link>(MAX_SPEED);
76 &#32;&#32;}
77 &#32;&#32;<link linkend="lifter_8h_1ad00a195af30f246924d6e1a30095b882">set_main_lifter_motors</link>(0);
78 }
<link linkend="auto_8c_1a42084538c07a7089a1fe425c4f97650a">83 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="auto_8c_1a42084538c07a7089a1fe425c4f97650a">auton_drive_towards_mobile_goal</link>(<emphasis class="keywordtype">int</emphasis>&#32;counts_drive,&#32;<emphasis class="keywordtype">int</emphasis>&#32;counts_drive_left,
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;counts_drive_right)&#32;{
85 &#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(counts_drive&#32;&lt;&#32;MOBILE_GOAL_DISTANCE)&#32;{
86 &#32;&#32;&#32;&#32;<link linkend="drive_8h_1a8df41fd50094c065eedc81fc5e6595d1">set_side_speed</link>(<link linkend="drive_8h_1afc015eff6557e84151d2e53b94375445a627abe5a430420baf29ebe1940a7f2fb">BOTH</link>,&#32;127);
87 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;Restablish&#32;the&#32;distance&#32;traveled</emphasis>
88 &#32;&#32;&#32;&#32;<link linkend="_a_p_i_8h_1ac4f1500418a729ac3ee95bce9768b20c">imeGet</link>(MID_LEFT_DRIVE,&#32;&amp;counts_drive_left);
89 &#32;&#32;&#32;&#32;<link linkend="_a_p_i_8h_1ac4f1500418a729ac3ee95bce9768b20c">imeGet</link>(MID_RIGHT_DRIVE,&#32;&amp;counts_drive_right);
90 &#32;&#32;&#32;&#32;counts_drive&#32;=&#32;counts_drive_left&#32;+&#32;counts_drive_right;
91 &#32;&#32;&#32;&#32;counts_drive&#32;/=&#32;2;
92 &#32;&#32;}
93 }
<link linkend="auto_8c_1a8141105864165fcb16d70f7cc72a1b6f">98 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="auto_8c_1a8141105864165fcb16d70f7cc72a1b6f">auton_turn_180</link>()&#32;{
99 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;ang&#32;=&#32;0;
100 &#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(ang&#32;&lt;&#32;HALF_ROTATE)&#32;{
101 &#32;&#32;&#32;&#32;ang&#32;+=&#32;<link linkend="localization_8h_1a5dd17937f5561711cd12cdefa8d31869">calculate_encoder_angle</link>();
102 &#32;&#32;&#32;&#32;<link linkend="drive_8h_1a8df41fd50094c065eedc81fc5e6595d1">set_side_speed</link>(<link linkend="drive_8h_1afc015eff6557e84151d2e53b94375445adb45120aafd37a973140edee24708065">LEFT</link>,&#32;MAX_SPEED);
103 &#32;&#32;&#32;&#32;<link linkend="drive_8h_1a8df41fd50094c065eedc81fc5e6595d1">set_side_speed</link>(<link linkend="drive_8h_1afc015eff6557e84151d2e53b94375445aec8379af7490bb9eaaf579cf17876f38">RIGHT</link>,&#32;MIN_SPEED);
104 &#32;&#32;}
105 &#32;&#32;<link linkend="drive_8h_1a8df41fd50094c065eedc81fc5e6595d1">set_side_speed</link>(<link linkend="drive_8h_1afc015eff6557e84151d2e53b94375445a627abe5a430420baf29ebe1940a7f2fb">BOTH</link>,&#32;0);
106 }
107 
108 <emphasis class="comment">/*</emphasis>
109 <emphasis class="comment">&#32;*&#32;Runs&#32;the&#32;user&#32;autonomous&#32;code.&#32;This&#32;function&#32;will&#32;be&#32;started&#32;in&#32;its&#32;own&#32;task</emphasis>
110 <emphasis class="comment">&#32;*&#32;with&#32;the&#32;default&#32;priority&#32;and&#32;stack&#32;size&#32;whenever&#32;the&#32;robot&#32;is&#32;enabled&#32;via</emphasis>
111 <emphasis class="comment">&#32;*&#32;the&#32;Field&#32;Management&#32;System&#32;or&#32;the&#32;VEX&#32;Competition&#32;Switch&#32;in&#32;the&#32;autonomous</emphasis>
112 <emphasis class="comment">&#32;*&#32;mode.&#32;If&#32;the&#32;robot&#32;is&#32;disabled&#32;or&#32;communications&#32;is&#32;lost,&#32;&#32;the&#32;autonomous</emphasis>
113 <emphasis class="comment">&#32;*&#32;task&#32;will&#32;be&#32;stopped&#32;by&#32;the&#32;kernel.&#32;Re-enabling&#32;the&#32;robot&#32;will&#32;restart&#32;the</emphasis>
114 <emphasis class="comment">&#32;*&#32;task,&#32;not&#32;re-start&#32;it&#32;from&#32;where&#32;it&#32;left&#32;off.</emphasis>
115 <emphasis class="comment">&#32;*</emphasis>
116 <emphasis class="comment">&#32;*&#32;Code&#32;running&#32;in&#32;the&#32;autonomous&#32;task&#32;cannot&#32;access&#32;information&#32;from&#32;the&#32;VEX</emphasis>
117 <emphasis class="comment">&#32;*&#32;Joystick.&#32;However,&#32;the&#32;autonomous&#32;function&#32;can&#32;be&#32;invoked&#32;from&#32;another&#32;task</emphasis>
118 <emphasis class="comment">&#32;*&#32;if&#32;a&#32;VEX&#32;Competition&#32;Switch&#32;is&#32;not&#32;available,&#32;and&#32;it&#32;can&#32;access&#32;joystick</emphasis>
119 <emphasis class="comment">&#32;*&#32;information&#32;if&#32;called&#32;in&#32;this&#32;way.</emphasis>
120 <emphasis class="comment">&#32;*</emphasis>
121 <emphasis class="comment">&#32;*&#32;The&#32;autonomous&#32;task&#32;may&#32;exit,&#32;unlike&#32;operatorControl()&#32;which&#32;should&#32;never</emphasis>
122 <emphasis class="comment">&#32;*&#32;exit.&#32;If&#32;it&#32;does&#32;so,&#32;the&#32;robot&#32;will&#32;await&#32;a&#32;switch&#32;to&#32;another&#32;mode&#32;or</emphasis>
123 <emphasis class="comment">&#32;*&#32;disable/enable&#32;cycle.</emphasis>
124 <emphasis class="comment">&#32;*/</emphasis>
<link linkend="auto_8c_1a3c7ca506bbc071fa740de13805b7f376">125 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="auto_8c_1a3c7ca506bbc071fa740de13805b7f376">autonomous</link>()&#32;{
126 &#32;&#32;<link linkend="auto_8c_1ae66ea80c777135c9f4d288a05f40ca86">start_auton</link>();
127 
128 &#32;&#32;<emphasis class="comment">//&#32;How&#32;far&#32;the&#32;left&#32;wheels&#32;have&#32;gone</emphasis>
129 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;counts_drive_left;
130 &#32;&#32;<emphasis class="comment">//&#32;How&#32;far&#32;the&#32;right&#32;wheels&#32;have&#32;gone</emphasis>
131 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;counts_drive_right;
132 &#32;&#32;<emphasis class="comment">//&#32;The&#32;average&#32;distance&#32;traveled&#32;forward</emphasis>
133 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;counts_drive;
134 
135 &#32;&#32;<emphasis class="comment">//&#32;Reset&#32;the&#32;integrated&#32;motor&#32;controllers</emphasis>
136 &#32;&#32;<link linkend="auto_8c_1ac033c02ada6071c5f064cac73bead0fd">setup_ime_auton</link>(&amp;counts_drive_left,&#32;&amp;counts_drive_right,&#32;&amp;counts_drive);
137 &#32;&#32;<link linkend="log_8h_1a1606d750e1bb8de9f9e917172bba3382">info</link>(<emphasis class="stringliteral">&quot;break&#32;0&quot;</emphasis>);
138 &#32;&#32;<emphasis class="comment">//&#32;Deploy&#32;claw</emphasis>
139 &#32;&#32;<link linkend="auto_8c_1a64bd65456b81f16eb4ff67237159f984">deploy_seoncdary_lifter</link>();
140 &#32;&#32;<link linkend="log_8h_1a1606d750e1bb8de9f9e917172bba3382">info</link>(<emphasis class="stringliteral">&quot;break&#32;1&quot;</emphasis>);
141 
142 &#32;&#32;<link linkend="log_8h_1a1606d750e1bb8de9f9e917172bba3382">info</link>(<emphasis class="stringliteral">&quot;break&#32;2&quot;</emphasis>);
143 &#32;&#32;<link linkend="lifter_8h_1a78640d547d9361951a92d0bc00939536">set_secondary_lifter_motors</link>(0);
144 
145 &#32;&#32;<emphasis class="comment">//&#32;Grab&#32;pre-load&#32;cone</emphasis>
146 &#32;&#32;<link linkend="_a_p_i_8h_1a1c59207742a1acf45a8957d7f04f9dfe">delay</link>(300);
147 
148 &#32;&#32;<link linkend="auto_8c_1a55085901854f29969753bfd62c70049c">auton_raise_sec_lifter_max</link>();
149 &#32;&#32;<emphasis class="comment">//&#32;Raise&#32;the&#32;lifter</emphasis>
150 &#32;&#32;<link linkend="auto_8c_1a51a62a1a0851cc5939a2c6034849e380">auton_rasie_main_lifter</link>();
151 &#32;&#32;<emphasis class="comment">//&#32;Drive&#32;towards&#32;the&#32;goal</emphasis>
152 
153 &#32;&#32;<link linkend="mobile__goal__intake_8h_1aef03134014e51a6a90dd3824f09f4d6c">lower_intake</link>();
154 &#32;&#32;<link linkend="_a_p_i_8h_1a1c59207742a1acf45a8957d7f04f9dfe">delay</link>(300);
155 &#32;&#32;<link linkend="mobile__goal__intake_8h_1ab31e12bb0fa46c77906a048666b699d5">set_intake_motor</link>(0);
156 
157 &#32;&#32;<link linkend="auto_8c_1a42084538c07a7089a1fe425c4f97650a">auton_drive_towards_mobile_goal</link>(counts_drive,&#32;counts_drive_left,
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;counts_drive_right);
159 &#32;&#32;<emphasis class="comment">//&#32;Stop&#32;moving</emphasis>
160 &#32;&#32;<link linkend="drive_8h_1a8df41fd50094c065eedc81fc5e6595d1">set_side_speed</link>(<link linkend="drive_8h_1afc015eff6557e84151d2e53b94375445a627abe5a430420baf29ebe1940a7f2fb">BOTH</link>,&#32;0);
161 &#32;&#32;<link linkend="_a_p_i_8h_1a1c59207742a1acf45a8957d7f04f9dfe">delay</link>(1000);
162 
163 &#32;&#32;<link linkend="mobile__goal__intake_8h_1aa46a9341d1eb7b39a2ef4cc5079ee3ca">raise_intake</link>();
164 &#32;&#32;<link linkend="_a_p_i_8h_1a1c59207742a1acf45a8957d7f04f9dfe">delay</link>(300);
165 &#32;&#32;<link linkend="mobile__goal__intake_8h_1ab31e12bb0fa46c77906a048666b699d5">set_intake_motor</link>(0);
166 
167 &#32;&#32;<emphasis class="comment">//&#32;Drop&#32;the&#32;cone&#32;on&#32;the&#32;goal</emphasis>
168 &#32;&#32;<link linkend="claw_8h_1a3a6168bf4e2042115dd32542f1f6a2f5">claw_grab_cone</link>();
169 &#32;&#32;<link linkend="_a_p_i_8h_1a1c59207742a1acf45a8957d7f04f9dfe">delay</link>(1000);
170 
171 &#32;&#32;<link linkend="auto_8c_1a8141105864165fcb16d70f7cc72a1b6f">auton_turn_180</link>();
172 
173 &#32;&#32;counts_drive&#32;=&#32;0;
174 
175 &#32;&#32;<emphasis class="keywordflow">while</emphasis>&#32;(counts_drive&#32;&lt;&#32;MOBILE_GOAL_DISTANCE&#32;+&#32;ZONE_DISTANCE)&#32;{
176 &#32;&#32;&#32;&#32;<link linkend="drive_8h_1a8df41fd50094c065eedc81fc5e6595d1">set_side_speed</link>(<link linkend="drive_8h_1afc015eff6557e84151d2e53b94375445a627abe5a430420baf29ebe1940a7f2fb">BOTH</link>,&#32;127);
177 &#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;Restablish&#32;the&#32;distance&#32;traveled</emphasis>
178 &#32;&#32;&#32;&#32;<link linkend="_a_p_i_8h_1ac4f1500418a729ac3ee95bce9768b20c">imeGet</link>(MID_LEFT_DRIVE,&#32;&amp;counts_drive_left);
179 &#32;&#32;&#32;&#32;<link linkend="_a_p_i_8h_1ac4f1500418a729ac3ee95bce9768b20c">imeGet</link>(MID_RIGHT_DRIVE,&#32;&amp;counts_drive_right);
180 &#32;&#32;&#32;&#32;counts_drive&#32;=&#32;counts_drive_left&#32;+&#32;counts_drive_right;
181 &#32;&#32;&#32;&#32;counts_drive&#32;/=&#32;2;
182 &#32;&#32;}
183 
184 &#32;&#32;<link linkend="mobile__goal__intake_8h_1aef03134014e51a6a90dd3824f09f4d6c">lower_intake</link>();
185 &#32;&#32;<link linkend="_a_p_i_8h_1a1c59207742a1acf45a8957d7f04f9dfe">delay</link>(300);
186 &#32;&#32;<link linkend="mobile__goal__intake_8h_1ab31e12bb0fa46c77906a048666b699d5">set_intake_motor</link>(0);
187 
188 &#32;&#32;<link linkend="drive_8h_1a8df41fd50094c065eedc81fc5e6595d1">set_side_speed</link>(<link linkend="drive_8h_1afc015eff6557e84151d2e53b94375445a627abe5a430420baf29ebe1940a7f2fb">BOTH</link>,&#32;MIN_SPEED);
189 &#32;&#32;<link linkend="_a_p_i_8h_1a1c59207742a1acf45a8957d7f04f9dfe">delay</link>(1000);
190 &#32;&#32;<link linkend="drive_8h_1a8df41fd50094c065eedc81fc5e6595d1">set_side_speed</link>(<link linkend="drive_8h_1afc015eff6557e84151d2e53b94375445a627abe5a430420baf29ebe1940a7f2fb">BOTH</link>,&#32;0);
191 
192 &#32;&#32;<link linkend="slew_8h_1a981c9990a969d2587e66e550737f7cd9">deinitslew</link>();
193 }
    </computeroutput></literallayout>
</section>
